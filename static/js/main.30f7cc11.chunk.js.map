{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","value","status","filterReducer","filter","query","all","todos","todosReducer","rootReducer","combineReducers","currentTodo","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","length","className","map","id","title","completed","classNames","onClick","currentTodoActions","setTodo","TodoFilter","handleQueryChange","filterActions","onChange","e","target","active","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","userId","catch","Error","href","email","name","App","loadTodos","todosArr","visibleTodos","useMemo","hasQuery","toLowerCase","includes","trim","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30f7cc11.chunk.js","sourcesContent":["export enum Status {\n  all = 'all',\n  completed = 'completed',\n  active = 'active',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = { type: 'filter/QUERY', payload: string };\ntype SetStatusAction = { type: 'filter/STATUS', payload: Status };\n\ntype Action = SetQueryAction | SetStatusAction;\n\nconst setQuery = (value: string): SetQueryAction => ({\n  type: 'filter/QUERY',\n  payload: value,\n});\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/STATUS',\n  payload: status,\n});\n\nexport const actions = { setQuery, setStatus };\n\nconst filterReducer = (\n  filter = {\n    query: '',\n    status: Status.all,\n  },\n  action: Action,\n) => {\n  switch (action.type) {\n    case 'filter/QUERY':\n      return { ...filter, query: action.payload };\n\n    case 'filter/STATUS':\n      return { ...filter, status: action.payload };\n\n    default:\n      return filter;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype LoadAction = { type: 'todos/LOAD', payload: Todo[] };\n\ntype Action = LoadAction;\n\nconst load = (todos: Todo[]): LoadAction => ({\n  type: 'todos/LOAD',\n  payload: todos,\n});\n\nexport const actions = { load };\n\nconst todosReducer = (todos: Todo[] = [], action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/LOAD':\n      return action.payload;\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  currentTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  currentTodo,\n}) => {\n  const dispatch = useAppDispatch();\n  const setTodo = (todo: Todo) => dispatch(currentTodoActions.setTodo(todo));\n\n  return (\n    <>\n      {!todos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {todos.map(todo => {\n              const { id, title, completed } = todo;\n\n              return (\n                <tr\n                  data-cy=\"todo\"\n                  className={classNames({\n                    'has-background-info-light': currentTodo?.id === id,\n                  })}\n                  key={id}\n                >\n                  <td className=\"is-vcentered\">{id}</td>\n                  {completed ? (\n                    <td className=\"is-vcentered\">\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    </td>\n                  ) : (\n                    <td className=\"is-vcentered\" />\n                  )}\n                  <td className=\"is-vcentered is-expanded\">\n                    <p className={classNames({\n                      'has-text-danger': !completed,\n                      'has-text-success': completed,\n                    })}\n                    >\n                      {title}\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => setTodo(todo)}\n                    >\n                      <span className=\"icon\">\n                        <i className={classNames('far', {\n                          'fa-eye': currentTodo?.id !== id,\n                          'fa-eye-slash': currentTodo?.id === id,\n                        })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n\n    </>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { Status } from '../../types/Status';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useDispatch();\n  const handleQueryChange = (value: string) => dispatch(\n    filterActions.setQuery(value),\n  );\n  const handleStatusChange = (value: Status) => dispatch(\n    filterActions.setStatus(value),\n  );\n\n  const filter = useAppSelector(state => state.filter);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter.status}\n            onChange={(e) => handleStatusChange(e.target.value as Status)}\n          >\n            <option value={Status.all}>{Status.all}</option>\n            <option value={Status.active}>{Status.active}</option>\n            <option value={Status.completed}>{Status.completed}</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={(e) => handleQueryChange(e.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filter.query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleQueryChange('')}\n            >\n              x\n            </button>\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { useAppDispatch } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\ntype Props = {\n  currentTodo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  currentTodo,\n}) => {\n  const dispatch = useAppDispatch();\n  const removeTodo = () => dispatch(currentTodoActions.removeTodo());\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(currentTodo.userId)\n      .then(setUser)\n      .catch(() => {\n        throw new Error(\"User can't be loaded\");\n      });\n  }, []);\n\n  const { title, completed, id } = currentTodo;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={removeTodo}\n            >\n              x\n            </button>\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions } from './features/todos';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const loadTodos = (todosArr: Todo[]) => dispatch(actions.load(todosArr));\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n\n  useEffect(() => {\n    getTodos()\n      .then(loadTodos)\n      .catch(() => {\n        throw new Error(\"Todos can't be loaded\");\n      });\n  }, []);\n\n  const visibleTodos = useMemo(() => (\n    todos.filter(todo => {\n      const hasQuery = todo.title.toLowerCase()\n        .includes(filter.query.trim().toLowerCase());\n\n      switch (filter.status) {\n        case Status.active:\n          return !todo.completed && hasQuery;\n        case Status.completed:\n          return todo.completed && hasQuery;\n        default:\n          return hasQuery;\n      }\n    })\n  ), [filter, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={visibleTodos}\n                  currentTodo={currentTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo\n        && (\n          <TodoModal\n            currentTodo={currentTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}